name: Build "turnip"

on:
  workflow_dispatch:  # Allows for manual triggering
  schedule:           # Automatic scheduled trigger
  # Daily at 10 AM GMT+10 and 5 PM GMT+10
  - cron: "0 0 * * *"  # This runs at 10 AM GMT+10 (which is 00:00 UTC on the same day)
  - cron: "0 7 * * *"   # This runs at 5 PM GMT+10 (which is 07:00 UTC on the same day)

jobs:
  start_building_turnip:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3  # Checkout repository code

    - name: Prepare environment  # Prepare system for building Mesa
      run: |
        sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list  # Enable deb-src for source packages
        sudo apt update  # Update package list
        sudo apt build-dep mesa -y  # Install build dependencies for Mesa
    
    - name: Execute build script  # Run custom build script
      run: bash ./turnip_builder.sh

    - name: Upload Build Artifact  # Upload build logs for debugging
      uses: actions/upload-artifact@v3.1.0
      with:
        name: Build Logs
        path: |
          turnip_workdir/ninja_log
          turnip_workdir/mesa/build-android-aarch64/meson-logs/meson-log.txt
    
    - id: versions
      name: "Get release info"  # Collect version and release information for the build
      run: |
        echo "name=$(cat turnip_workdir/release)" >> "$GITHUB_OUTPUT"
        echo "tag=$(cat turnip_workdir/tag)" >> "$GITHUB_OUTPUT"
        echo "filename=$(cat turnip_workdir/filename)" >> "$GITHUB_OUTPUT"
        echo "patched=$(cat turnip_workdir/patched)" >> "$GITHUB_OUTPUT"
        echo "experimental=$(cat turnip_workdir/experimental)" >> "$GITHUB_OUTPUT"

    - id: release_check
      name: Release "turnip" (Base Version)  # Create a release for the base build
      uses: softprops/action-gh-release@v1
      with:
        body_path: turnip_workdir/description  # Description for the release
        name: ${{ steps.versions.outputs.name }}  # Release name
        tag_name: ${{ steps.versions.outputs.tag }}  # Git tag
        files: |
           turnip_workdir/${{ steps.versions.outputs.filename }}.zip  # Main zip file

    - name: Release "turnip" with Experimental  # Release for experimental build (if applicable)
      if: ${{ contains(steps.versions.outputs.experimental, 'true') }}  # Conditional release if experimental patches exist
      uses: softprops/action-gh-release@v1
      with:
        body_path: turnip_workdir/description  # Description for the release
        name: ${{ steps.versions.outputs.name }}  # Release name
        tag_name: ${{ steps.versions.outputs.tag }}  # Git tag
        files: |
           turnip_workdir/${{ steps.versions.outputs.filename }}_experimental.zip  # Experimental build zip

    - name: Release "turnip" with Patched  # Release for patched build (if applicable)
      if: ${{ contains(steps.versions.outputs.patched, 'true') }}  # Conditional release if patched version exists
      uses: softprops/action-gh-release@v1
      with:
        body_path: turnip_workdir/description  # Description for the release
        name: ${{ steps.versions.outputs.name }}  # Release name
        tag_name: ${{ steps.versions.outputs.tag }}  # Git tag
        files: |
           turnip_workdir/${{ steps.versions.outputs.filename }}_patched.zip  # Patched build zip

    - name: Notify Discord  # Notify Discord if release is successful
      if: ${{ steps.release_check.outcome == 'success' }}  # Only run if release succeeded
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "content": "A Turnip Driver Has Dropped: **${{ steps.versions.outputs.name }}** - [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ steps.versions.outputs.tag }})",
          "username": "Turnip Drivers",
          "avatar_url": "https://i.imgur.com/4Pu1FyI.png"
        }' ${{ secrets.WEBHOOK_URL }}  # Webhook URL stored in GitHub Secrets
